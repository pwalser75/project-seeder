buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.3'
        classpath 'org.asciidoctor:asciidoctorj-diagram:1.5.4'
        classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.15'
    }
}

defaultTasks 'clean', 'build'

description = '${projectDescription}'
group = '${projectGroup}'
version = '${projectVersion}'

apply plugin: 'org.asciidoctor.convert'

asciidoctorj {
    version = '1.5.5'
}

project.task('copyHtmlImages', type: Copy) {
    from 'src/docs'
    into 'build/docs/html5'
    include '**/*.svg', '**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.gif'
}

project.task('copyPdfImages', type: Copy) {
    from 'src/docs'
    into 'build/docs/pdf/images'
    include '**/*.svg', '**/*.png', '**/*.jpg', '**/*.jpeg', '**/*.gif', '**/*.iuml', '**/*.puml'
}

tasks.withType(org.asciidoctor.gradle.AsciidoctorTask) { docTask ->

    requires = ['asciidoctor-diagram', 'uri']
    sourceDir = file('src/docs')
    outputDir = file('build/docs')
    logDocuments = true

    attributes  \
        'project-name': project.name,
        'project-group': project.group,
        'project-version': project.version,
        'toc': 'left',
        'icons': 'font',
        'linkattrs': 'true',
        'encoding': 'utf-8',
		'allow-uri-read': 'true'
}


task generateHTML(type: org.asciidoctor.gradle.AsciidoctorTask) {
    backends = ['html5']
    dependsOn copyHtmlImages
    attributes \
        'source-highlighter': 'highlightjs',
        'highlightjs-theme': 'hybrid'
    mustRunAfter copyHtmlImages
}

task generatePDF(type: org.asciidoctor.gradle.AsciidoctorTask) {
    backends = ['html5']
    dependsOn copyPdfImages
    mustRunAfter copyPdfImages
    attributes  \
        'pdf-stylesdir': 'theme',
        'pdf-style': 'idx',
        'pdf-fontsdir': "theme/fonts",
        'imagesdir': file('build/docs/pdf/images').path,
        'source-highlighter': 'coderay'
    backends = ['pdf']
}

task pdfArchives(type: Copy) {
    dependsOn generatePDF
    from project.file('build/docs/pdf')
    include '**/*.pdf'
    into project.file('build/libs')
    includeEmptyDirs = false
	eachFile {
        details ->
            details.path = details.name.replaceFirst(/(.*)\.pdf/, "${project.name}-${project.version}-" + '$1.pdf')
            project.artifacts.add('archives', project.file('build/libs/' + details.name))
    }
}

task htmlArchives(type: Zip) {
    dependsOn generateHTML
    from project.file('build/docs/html5')
    baseName 'documentation'
    appendix 'html5'
    include '**/*'
    exclude '.*'
    exclude 'theme'
    includeEmptyDirs false
    destinationDir(file('build/libs'))
}

artifacts {
    archives htmlArchives
}

assemble.dependsOn htmlArchives
assemble.dependsOn pdfArchives
